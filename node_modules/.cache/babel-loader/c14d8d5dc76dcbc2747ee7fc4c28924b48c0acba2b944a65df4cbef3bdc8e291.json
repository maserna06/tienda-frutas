{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/GitHub/tienda-frutas/src/components/frutas/ListaFrutas.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Fruta from \"./Fruta\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Axios = axios.create({\n  baseURL: \"https://www.fruityvice.com/api/fruit/\"\n});\nconst ListaFrutas = () => {\n  _s();\n  const [frutas, setFrutas] = useState({});\n\n  /**\n   * @TODO:\n   * Obtener las imagenes de las frutas desde la API,\n   * ya que en la documentación aparece como obtener la imagen de cada fruta pero no funciona,\n   * falta indagar mejor en la documentación la forma de obtener las imágenes,\n   * al parecer ya no existe ese endpoint.\n   */\n\n  //   const getFruitImage = async (fruitName) => {\n  //     console.log('fruitName:', fruitName);\n  //     const image = await Axios.get(`${fruitName}/image`);\n  //     console.log(\"image:\", image);\n  //     // setFrutas(image);\n  //   };\n\n  useEffect(() => {\n    const getFruits = async () => {\n      const {\n        data\n      } = await Axios.get(\"all\");\n      // console.log(\"data:\", data);\n\n      // for (let i = 0; i < data.length; i++) {\n      //     const fruta = data[i];\n      //     console.log('fruta:', fruta.name);\n      //     // let imagen = await getFruitImage(fruta.name);\n      //     // console.log('imagen:', imagen);\n      // }\n\n      setFrutas(data);\n    };\n    async function asyncCall() {\n      await getFruits();\n    }\n    asyncCall();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    responsive: true,\n    hover: true,\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Imagen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Familia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"G\\xE9nero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Calorias\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Carbohidratos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Grasa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Proteina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Azucar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: frutas.length > 0 ? frutas.map((fruta, index) => /*#__PURE__*/_jsxDEV(Fruta, {\n        fruta: fruta,\n        index: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ListaFrutas, \"iOri83sPGfxBD0qyWfCpIiATFNI=\");\n_c = ListaFrutas;\nexport default ListaFrutas;\nvar _c;\n$RefreshReg$(_c, \"ListaFrutas\");","map":{"version":3,"names":["useEffect","useState","Table","Fruta","jsxDEV","_jsxDEV","Fragment","_Fragment","Axios","axios","create","baseURL","ListaFrutas","_s","frutas","setFrutas","getFruits","data","get","asyncCall","responsive","hover","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","fruta","index","_c","$RefreshReg$"],"sources":["/Users/manuel/Documents/GitHub/tienda-frutas/src/components/frutas/ListaFrutas.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport Table from \"react-bootstrap/Table\";\nimport Fruta from \"./Fruta\";\n\nexport const Axios = axios.create({\n  baseURL: \"https://www.fruityvice.com/api/fruit/\"\n});\n\nconst ListaFrutas = () => {\n    const [frutas, setFrutas] = useState({});\n\n/**\n * @TODO:\n * Obtener las imagenes de las frutas desde la API,\n * ya que en la documentación aparece como obtener la imagen de cada fruta pero no funciona,\n * falta indagar mejor en la documentación la forma de obtener las imágenes,\n * al parecer ya no existe ese endpoint.\n */\n\n//   const getFruitImage = async (fruitName) => {\n//     console.log('fruitName:', fruitName);\n//     const image = await Axios.get(`${fruitName}/image`);\n//     console.log(\"image:\", image);\n//     // setFrutas(image);\n//   };\n\n  useEffect(() => {\n    const getFruits = async () => {\n        const { data } = await Axios.get(\"all\");\n        // console.log(\"data:\", data);\n\n        // for (let i = 0; i < data.length; i++) {\n        //     const fruta = data[i];\n        //     console.log('fruta:', fruta.name);\n        //     // let imagen = await getFruitImage(fruta.name);\n        //     // console.log('imagen:', imagen);\n        // }\n\n        setFrutas(data);\n    }\n\n    async function asyncCall() {\n      await getFruits();\n    }\n\n    asyncCall();\n  }, []);\n\n  return (\n    <Table responsive hover className=\"mt-5\">\n        <thead>\n            <tr>\n                <th>Id</th>\n                <th>Imagen</th>\n                <th>Nombre</th>\n                <th>Familia</th>\n                <th>Género</th>\n                <th>Calorias</th>\n                <th>Carbohidratos</th>\n                <th>Grasa</th>\n                <th>Proteina</th>\n                <th>Azucar</th>\n                <th></th>\n            </tr>\n        </thead>\n\n        <tbody>\n            { frutas.length > 0 ?\n                    frutas.map((fruta, index) =>\n                        <Fruta\n                            key={index}\n                            fruta={fruta}\n                            index={index}\n                        />\n                    )\n                :\n                    <></>\n            }\n        </tbody>\n    </Table>\n  );\n};\n\nexport default ListaFrutas;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,OAAO,MAAMC,KAAK,GAAGC,KAAK,CAACC,MAAM,CAAC;EAChCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE5C;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEED,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,KAAK,CAAC;MACvC;;MAEA;MACA;MACA;MACA;MACA;MACA;;MAEAH,SAAS,CAACE,IAAI,CAAC;IACnB,CAAC;IAED,eAAeE,SAASA,CAAA,EAAG;MACzB,MAAMH,SAAS,CAAC,CAAC;IACnB;IAEAG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA,CAACH,KAAK;IAACkB,UAAU;IAACC,KAAK;IAACC,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACpClB,OAAA;MAAAkB,QAAA,eACIlB,OAAA;QAAAkB,QAAA,gBACIlB,OAAA;UAAAkB,QAAA,EAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACXtB,OAAA;UAAAkB,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACftB,OAAA;UAAAkB,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACftB,OAAA;UAAAkB,QAAA,EAAI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBtB,OAAA;UAAAkB,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACftB,OAAA;UAAAkB,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBtB,OAAA;UAAAkB,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBtB,OAAA;UAAAkB,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdtB,OAAA;UAAAkB,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBtB,OAAA;UAAAkB,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACftB,OAAA;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAERtB,OAAA;MAAAkB,QAAA,EACMT,MAAM,CAACc,MAAM,GAAG,CAAC,GACXd,MAAM,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACpB1B,OAAA,CAACF,KAAK;QAEF2B,KAAK,EAAEA,KAAM;QACbC,KAAK,EAAEA;MAAM,GAFRA,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACL,CAAC,gBAEDtB,OAAA,CAAAE,SAAA,mBAAI;IAAC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEZ,CAAC;AAACd,EAAA,CAzEID,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AA2EjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}